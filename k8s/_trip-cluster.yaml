apiVersion: apps/v1
kind: Deployment
metadata:
  name: poi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poi
  template:
    metadata:
      labels:
        app: poi
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: poi
        image: registryavj6801.azurecr.io/tripinsights/poi:1.0
        env:
        - name: SQL_USER 
          value: "sqladminaVj6801"
        - name: SQL_PASSWORD 
          value: "test123!@"
        - name: SQL_SERVER 
          value: "sqlserveravj6801.database.windows.net"
        - name: SQL_DBNAME
          value: "mydrivingDB"
        ports:
        - containerPort: 80
          name: webport
---
apiVersion: v1
kind: Service
metadata:
  name: poi
spec:
  ports:
  - port: 80
  selector:
    app: poi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userjava
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userjava
  template:
    metadata:
      labels:
        app: userjava
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: userjava
        image: registryavj6801.azurecr.io/tripinsights/userapi:1.0
        env:
        - name: SQL_USER 
          value: "sqladminaVj6801"
        - name: SQL_PASSWORD 
          value: "test123!@"
        - name: SQL_SERVER 
          value: "sqlserveravj6801.database.windows.net"
        - name: SQL_DBNAME
          value: "mydrivingDB"
        ports:
        - containerPort: 80
          name: webport
---
apiVersion: v1
kind: Service
metadata:
  name: userjava
spec:
  ports:
  - port: 80
  selector:
    app: userjava
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userprofile
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userprofile
  template:
    metadata:
      labels:
        app: userprofile
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: userprofile
        image: registryavj6801.azurecr.io/tripinsights/userprofile:1.0
        env:
        - name: SQL_USER 
          value: "sqladminaVj6801"
        - name: SQL_PASSWORD 
          value: "test123!@"
        - name: SQL_SERVER 
          value: "sqlserveravj6801.database.windows.net"
        - name: SQL_DBNAME
          value: "mydrivingDB"
        ports:
        - containerPort: 80
          name: webport
---
apiVersion: v1
kind: Service
metadata:
  name: userprofile
spec:
  ports:
  - port: 80
  selector:
    app: userprofile
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trips
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trips
  template:
    metadata:
      labels:
        app: trips
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: trips
        image: registryavj6801.azurecr.io/tripinsights/trips:1.0
        env:
        - name: SQL_USER 
          value: "sqladminaVj6801"
        - name: SQL_PASSWORD 
          value: "test123!@"
        - name: SQL_SERVER 
          value: "sqlserveravj6801.database.windows.net"
        - name: SQL_DBNAME
          value: "mydrivingDB"
        ports:
        - containerPort: 80
          name: webport
---
apiVersion: v1
kind: Service
metadata:
  name: trips
spec:
  ports:
  - port: 80
  selector:
    app: trips
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tripviewer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tripviewer
  template:
    metadata:
      labels:
        app: tripviewer
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: tripviewer
        image: registryavj6801.azurecr.io/tripinsights/tripviewer:1.0
        env:
        - name: TRIPS_API_ENDPOINT 
          value: "http://trips"
        - name: USERPROFILE_API_ENDPOINT 
          value: "http://userprofile"
        ports:
        - containerPort: 80
          name: webport
---
apiVersion: v1
kind: Service
metadata:
  name: tripviewer
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: tripviewer